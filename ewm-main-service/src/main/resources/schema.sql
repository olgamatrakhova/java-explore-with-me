create table if not exists users (
    id bigint generated by default as identity not null,
    email varchar(254) not null,
    user_name varchar(250) not null,
    constraint users_pk primary key (id),
    constraint users_uq_email unique (email)
);

create table if not exists categories (
    id bigint generated by default as identity not null,
    name varchar(200) not null,
    constraint categories_pk primary key (id),
    constraint categories_uq_name unique (name)
);

create table if not exists location(
    id bigint generated by default as identity not null,
    lat double not null,
    lon double not null,
    constraint location_pk primary key (id)
);

create table if not exists event(
    id bigint generated by default as identity not null,
    annotation varchar(2000) not null,
    categories_id bigint not null,
    created_on timestamp without time zone not null,
    description varchar(7000) not null,
    event_date timestamp without time zone not null,
    initiator_id bigint not null,
    location_id bigint not null,
    paid boolean not null,
    participant_limit int not null,
    request_moderation boolean default true,
    state_event varchar(50) not null,
    title varchar(120) not null,
    published_on timestamp without time zone,
    constraint pk_event primary key (id),
    constraint fk_event_categories_id foreign key (categories_id) references categories (id) on delete cascade,
    constraint fk_event_initiator_id foreign key (initiator_id) references users (id) on delete cascade,
    constraint fk_event_location_id foreign key (location_id) references location (id) on delete cascade
);

create table if not exists request (
   id bigint generated by default as identity not null,
   created timestamp without time zone not null,
   event_id bigint not null,
   requester_id bigint not null,
   status varchar(50) not null,
   constraint pk_request primary key (id),
   constraint fk_request_event_id foreign key (event_id) references event (id) on delete cascade,
   constraint fk_request_requester_id foreign key (requester_id) references users (id) on delete cascade
);

create table if not exists compilations (
    id bigint generated by default as identity not null,
    pinned boolean not null,
    title varchar(200) not null,
    constraint pk_compilations primary key (id)
);

create table if not exists compilations_events (
    compilations_id bigint not null,
    events_id bigint not null,
    constraint compilations_events_fk1 foreign key (compilations_id) references compilations (id) on delete cascade,
    constraint compilations_events_fk2 foreign key (events_id) references event (id) on delete cascade
);